{"ast":null,"code":"import _slicedToArray from \"D:\\\\Priyanka\\\\Bharat_nft\\\\bharat_14Jun\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Priyanka\\\\Bharat_nft\\\\bharat_14Jun\\\\src\\\\components\\\\Timer.jsx\";\n\n// import React,{useState, useEffect} from 'react';\n// import { Container, Row, Col } from 'react-bootstrap';\n// const Timer = () => {\n//     const [countdownDate, setCountdownDate] = useState(new Date('06/09/2022').getTime());\n//   const [state, setState] = useState({\n//     days: 0,\n//     hours: 0,\n//     minutes: 0,\n//     seconds: 0,\n//   });\n// console.log(\"countdown\", countdownDate)\n//   useEffect(() => {\n//     setInterval(() => setNewTime(), 1000);\n//   }, []);\n//   const setNewTime = () => {\n//     if (countdownDate) {\n//       const currentTime = new Date().getTime();\n//       const distanceToDate = countdownDate - currentTime;\n//       let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\n//       let hours = Math.floor(\n//         (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n//       );\n//       let minutes = Math.floor(\n//         (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\n//       );\n//       let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\n//       const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n//       days = `${days}`;\n//       if (numbersToAddZeroTo.includes(hours)) {\n//         hours = `0${hours}`;\n//       } else if (numbersToAddZeroTo.includes(minutes)) {\n//         minutes = `0${minutes}`;\n//       } else if (numbersToAddZeroTo.includes(seconds)) {\n//         seconds = `0${seconds}`;\n//       }\n//       setState({ days: days, hours: hours, minutes, seconds });\n//     }\n//   };\n//     return (\n//         <>\n//             <Container>\n//                 <Row>\n//                     <Col lg={12} className=\"mt-5\">\n//                         <div>\n//                             <header className=\"header\">\n//                                 <h1 className=\"title\">React Hooks Countdown</h1>\n//                             </header>\n//                             <h3 className=\"subtitle\">A simple countdown to demonstrate, well, a countdown using the useEffect() and useState() hooks in React.</h3>\n//                             <div className='countdown-wrapper' style={{display:\"flex\", gap:\"30px\"}}>\n//                                 <div className='time-section'>\n//                                     <div className='time'>{state.days || '0'}</div>\n//                                     <small className=\"time-text\">Days</small>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>:</div>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>{state.hours || '00'}</div>\n//                                     <small className=\"time-text\">Hours</small>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>:</div>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>{state.minutes || '00'}</div>\n//                                     <small className=\"time-text\">Minutes</small>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>:</div>\n//                                 </div>\n//                                 <div className='time-section'>\n//                                     <div className='time'>{state.seconds || '00'}</div>\n//                                     <small className=\"time-text\">Seconds</small>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </Col>\n//                 </Row>\n//             </Container>\n//         </>\n//     )\n// }\n// export default Timer;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nvar Timer = function Timer(props) {\n  var _useState = useState(\"00\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      timerDays = _useState2[0],\n      setTimerDays = _useState2[1];\n\n  var _useState3 = useState(\"00\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timerHours = _useState4[0],\n      setTimerHours = _useState4[1];\n\n  var _useState5 = useState(\"00\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timerMinutes = _useState6[0],\n      setTimerMinutes = _useState6[1];\n\n  var _useState7 = useState(\"00\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timerSeconds = _useState8[0],\n      setTimerSeconds = _useState8[1];\n\n  var interval = useRef();\n\n  var startTimer = function startTimer() {\n    var countdownDate = new Date(props.currentTime).getTime();\n    interval = setInterval(function () {\n      var now = new Date().getTime();\n      var distance = countdownDate - now;\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n      if (distance < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  useEffect(function () {\n    startTimer();\n    return function () {\n      clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countdown-wrapper\",\n    style: {\n      display: \"flex\",\n      gap: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, timerDays, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 70\n    }\n  }, \"\\xA0Days\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, timerHours, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 71\n    }\n  }, \"\\xA0Hours\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, timerMinutes, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 73\n    }\n  }, \"\\xA0Minutes\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, timerSeconds, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 73\n    }\n  }, \"\\xA0Seconds\")))))))));\n};\n\nexport default Timer;","map":{"version":3,"sources":["D:/Priyanka/Bharat_nft/bharat_14Jun/src/components/Timer.jsx"],"names":["React","useState","useEffect","useRef","Container","Row","Col","Timer","props","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","countdownDate","Date","currentTime","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","display","gap"],"mappings":"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","sourcesContent":["// import React,{useState, useEffect} from 'react';\r\n// import { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// const Timer = () => {\r\n//     const [countdownDate, setCountdownDate] = useState(new Date('06/09/2022').getTime());\r\n//   const [state, setState] = useState({\r\n//     days: 0,\r\n//     hours: 0,\r\n//     minutes: 0,\r\n//     seconds: 0,\r\n//   });\r\n// console.log(\"countdown\", countdownDate)\r\n//   useEffect(() => {\r\n//     setInterval(() => setNewTime(), 1000);\r\n//   }, []);\r\n\r\n//   const setNewTime = () => {\r\n//     if (countdownDate) {\r\n//       const currentTime = new Date().getTime();\r\n\r\n//       const distanceToDate = countdownDate - currentTime;\r\n\r\n//       let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\r\n//       let hours = Math.floor(\r\n//         (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n//       );\r\n//       let minutes = Math.floor(\r\n//         (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n//       );\r\n//       let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n\r\n//       const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n//       days = `${days}`;\r\n//       if (numbersToAddZeroTo.includes(hours)) {\r\n//         hours = `0${hours}`;\r\n//       } else if (numbersToAddZeroTo.includes(minutes)) {\r\n//         minutes = `0${minutes}`;\r\n//       } else if (numbersToAddZeroTo.includes(seconds)) {\r\n//         seconds = `0${seconds}`;\r\n//       }\r\n\r\n//       setState({ days: days, hours: hours, minutes, seconds });\r\n//     }\r\n//   };\r\n//     return (\r\n//         <>\r\n//             <Container>\r\n//                 <Row>\r\n//                     <Col lg={12} className=\"mt-5\">\r\n//                         <div>\r\n//                             <header className=\"header\">\r\n//                                 <h1 className=\"title\">React Hooks Countdown</h1>\r\n//                             </header>\r\n//                             <h3 className=\"subtitle\">A simple countdown to demonstrate, well, a countdown using the useEffect() and useState() hooks in React.</h3>\r\n//                             <div className='countdown-wrapper' style={{display:\"flex\", gap:\"30px\"}}>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>{state.days || '0'}</div>\r\n//                                     <small className=\"time-text\">Days</small>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>:</div>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>{state.hours || '00'}</div>\r\n//                                     <small className=\"time-text\">Hours</small>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>:</div>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>{state.minutes || '00'}</div>\r\n//                                     <small className=\"time-text\">Minutes</small>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>:</div>\r\n//                                 </div>\r\n//                                 <div className='time-section'>\r\n//                                     <div className='time'>{state.seconds || '00'}</div>\r\n//                                     <small className=\"time-text\">Seconds</small>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </Col>\r\n//                 </Row>\r\n//             </Container>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n// export default Timer;\r\n\r\nimport React,{useState, useEffect, useRef} from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Timer = (props) => {\r\n   const [timerDays, setTimerDays] = useState(\"00\")\r\n   const [timerHours, setTimerHours] = useState(\"00\")\r\n   const [timerMinutes, setTimerMinutes] = useState(\"00\")\r\n   const [timerSeconds, setTimerSeconds] = useState(\"00\")\r\n\r\n   let interval = useRef();\r\n\r\n   const startTimer = ()=>{\r\n     const countdownDate = new Date(props.currentTime).getTime();\r\n     interval = setInterval(()=>{\r\n      const now = new Date().getTime();\r\n      const distance  = countdownDate - now;\r\n\r\n      const days = Math.floor(distance/ (1000*60*60*24));\r\n      const hours = Math.floor((distance% (1000*60*60*24)/(1000*60*60)));\r\n      const minutes = Math.floor((distance% (1000*60*60))/(1000*60));\r\n      const seconds = Math.floor((distance% (1000*60))/1000);\r\n\r\n      if(distance<0){\r\n        clearInterval(interval.current);\r\n      }else{\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMinutes(minutes);\r\n        setTimerSeconds(seconds);\r\n      }\r\n\r\n     },1000)\r\n   }\r\n\r\n   useEffect(()=>{\r\n     startTimer();\r\n     return()=>{\r\n      clearInterval(interval.current);\r\n     }\r\n   })\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={12} className=\"mt-2\">\r\n                        <div>\r\n                         \r\n                            <div className='countdown-wrapper' style={{display:\"flex\", gap:\"5px\"}}>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>{timerDays}<span className=\"time-text\">&nbsp;Days</span></div>\r\n                                    \r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>:</div>\r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>{timerHours}<span className=\"time-text\">&nbsp;Hours</span></div>\r\n                                    \r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>:</div>\r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>{timerMinutes}<span className=\"time-text\">&nbsp;Minutes</span></div>\r\n                                    \r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>:</div>\r\n                                </div>\r\n                                <div className='time-section'>\r\n                                    <div className='time'>{timerSeconds}<span className=\"time-text\">&nbsp;Seconds</span></div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}